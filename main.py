#coding:utf-8
import numpy as np

def play_game(npy1,npy2):
    ### 盤面
    # +--------+ a
    # | 0| 1| 2|
    # | 3| 4| 5|
    # | 6| 7| 8|
    # | 9|10|11|
    # +--------+ b
    # 座標             0  1  2  3  4  5  6  7  8  9 10 11 
    boad = np.array([[ 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,-1, 0],   #lion
                     [ 0, 0, 1, 0, 0, 0, 0, 0, 0,-1, 0, 0],   #elephant
                     [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1],   #giraffe
                     [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   #chicken
                     [ 0, 0, 0, 0, 1, 0, 0,-1, 0, 0, 0, 0],   #chick
                     [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])  #having piece(0:LI, 1:EL, 2:GI, 3:Ch, 6:LI, 7:EL, 8:GI, 9:Ch)

    ###駒得の得点
    point_LI = 10000
    point_EL = 25
    point_GI = 25
    # point_CH = 10
    point_Ch = 5

    ### KKPの読み込み
    kkp_a = np.load(npy1)
    kkp_b = np.load(npy2)

    ### 評価盤面の取得
    where_mLI = np.where(boad_a[0])
    where_eLI = np.where(boad_b[0])

    if where_mLI[0][0] < where_eLI[0][0]:
        a_value = kkp_a[where_eLI[0][0]][where_mLI[0][0]]
        b_value = kkp_b[where_mLI[0][0]][where_eLI[0][0]]
    else:
        a_value = kkp_a[where_eLI[0][0]][where_mLI[0][0]-1]
        b_value = kkp_b[where_mLI[0][0]][where_eLI[0][0]-1]
    
    ### 入力層の作成
    # どこに動けるか
    can_move_a = np.zeros(shape=(8,12))
    # for i in range(8):
    #     for j in range(5):
    #         can_move_a[i] -= boad_a[j]
    
    # ライオンについて    0  1  2  3  4  5  6  7  8  9 10 11
    base_LI  = np.array([[ 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0],  # 0
                         [ 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],  # 1
                         [ 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0],  # 2
                         [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0],  # 3
                         [ 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0],  # 4
                         [ 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0],  # 5
                         [ 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0],  # 6
                         [ 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1],  # 7
                         [ 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1],  # 8
                         [ 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0],  # 9
                         [ 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1],  #10
                         [ 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0]]) #11
    # ゾウについて         0  1  2  3  4  5  6  7  8  9 10 11
    base_EL  = np.array([[ 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],  # 0
                         [ 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0],  # 1
                         [ 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],  # 2
                         [ 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],  # 3
                         [ 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0],  # 4
                         [ 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],  # 5
                         [ 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],  # 6
                         [ 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1],  # 7
                         [ 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],  # 8
                         [ 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],  # 9
                         [ 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0],  #10
                         [ 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]]) #11
    # キリンについて       0  1  2  3  4  5  6  7  8  9 10 11
    base_GI  = np.array([[ 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],  # 0
                         [ 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0],  # 1
                         [ 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],  # 2
                         [ 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0],  # 3
                         [ 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0],  # 4
                         [ 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0],  # 5
                         [ 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0],  # 6
                         [ 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0],  # 7
                         [ 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1],  # 8
                         [ 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0],  # 9
                         [ 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1],  #10
                         [ 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0]]) #11
    # ニワトリについて     0  1  2  3  4  5  6  7  8  9 10 11
    base_CH  = np.array([[ 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],  # 0
                         [ 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0],  # 1
                         [ 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],  # 2
                         [ 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0],  # 3
                         [ 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0],  # 4
                         [ 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0],  # 5
                         [ 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0],  # 6
                         [ 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0],  # 7
                         [ 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1],  # 8
                         [ 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0],  # 9
                         [ 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1],  #10
                         [ 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0]]) #11
    # ヒヨコについて       0  1  2  3  4  5  6  7  8  9 10 11
    base_Ch  = np.array([[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # 0
                         [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # 1
                         [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # 2
                         [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # 3
                         [ 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # 4
                         [ 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # 5
                         [ 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],  # 6
                         [ 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],  # 7
                         [ 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],  # 8
                         [ 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],  # 9
                         [ 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],  #10
                         [ 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]]) #11
    
    can_move_a[0] = np.dot(boad_a[0],base_LI)

    
    
    print(can_move_a)

###########################################################
#####                  main                           #####
###########################################################
play_game("kkp_gene/gene_0.npy","kkp_gene/gene_1.npy")    
